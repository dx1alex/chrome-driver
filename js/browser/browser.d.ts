/// <reference types="node" />
export * from './base';
import { Base, BrowserOptions, BrowserStartOptions } from './base';
import { Exec } from './exec';
import { Elements } from './elements';
import { State } from './state';
import { Navigate } from './navigate';
import { Alert } from './alert';
import { Tabs } from './tabs';
import { Cookies } from './cookies';
import { Frames } from './frames';
import { Getter } from './getter';
import { Input } from './input';
import { Mouse } from './mouse';
import { Storage } from './storage';
import { Utils } from './utils';
import { Sessions } from './sessions';
import { Screenshot } from './screenshot';
import { Scroll } from './scroll';
import { Timeout } from './timeout';
import { CommandHistory, CommandHistoryObject } from './command-history';
import { $Class } from './$class';
export declare class Browser extends Base {
    protected static _no_command_history_list: string[];
    protected static _no_proxy_list: string[];
    protected static DEFAULT_WAIT_TIMEOUT: number;
    protected static DEFAULT_WAIT_INTERVAL: number;
    protected static MAX_COMMAND_HISTORY_ITEMS: number;
    static KEY: {
        null: string;
        cancel: string;
        help: string;
        back_space: string;
        backspace: string;
        tab: string;
        clear: string;
        return: string;
        enter: string;
        shift: string;
        control: string;
        ctrl: string;
        alt: string;
        pause: string;
        escape: string;
        space: string;
        pageup: string;
        page_up: string;
        pagedown: string;
        page_down: string;
        end: string;
        home: string;
        left_arrow: string;
        arrow_left: string;
        leftarrow: string;
        arrowleft: string;
        up_arrow: string;
        arrow_up: string;
        uparrow: string;
        arrowup: string;
        right_arrow: string;
        arrow_right: string;
        rightarrow: string;
        arrowright: string;
        down_arrow: string;
        arrow_down: string;
        downarrow: string;
        arrowdown: string;
        insert: string;
        delete: string;
        semicolon: string;
        equals: string;
        numpad_0: string;
        numpad_1: string;
        numpad_2: string;
        numpad_3: string;
        numpad_4: string;
        numpad_5: string;
        numpad_6: string;
        numpad_7: string;
        numpad_8: string;
        numpad_9: string;
        numpad0: string;
        numpad1: string;
        numpad2: string;
        numpad3: string;
        numpad4: string;
        numpad5: string;
        numpad6: string;
        numpad7: string;
        numpad8: string;
        numpad9: string;
        multiply: string;
        add: string;
        separator: string;
        subtract: string;
        decimal: string;
        divide: string;
        f1: string;
        f2: string;
        f3: string;
        f4: string;
        f5: string;
        f6: string;
        f7: string;
        f8: string;
        f9: string;
        f10: string;
        f11: string;
        f12: string;
        command: string;
        meta: string;
    };
    private _numCommand;
    commandHistory: CommandHistoryObject[];
    logStream: NodeJS.WritableStream;
    constructor(options: BrowserOptions);
    protected readonly _: this;
    getStatus(): Promise<any>;
    quit(): Promise<void>;
    start(options?: BrowserStartOptions): Promise<void>;
}
export interface Browser extends Scroll, Screenshot, Sessions, Utils, Storage, Mouse, Input, Getter, CommandHistory, Frames, Cookies, Tabs, Alert, Navigate, Exec, Elements, State, Timeout, $Class {
}
